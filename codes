CREATE TABLE Readers (    
  User_id INT PRIMARY KEY,      
  First_name VARCHAR(50),    
  Last_name VARCHAR(50),    
  Email VARCHAR(100),    
  Address VARCHAR(200)    
)
;

create table Phone_number 
( 
 
User_id int , 
Phone_number number(10), 
 
foreign key(User_id) references Readers(User_id), 
 
Constraint Pk Primary Key(User_id, Phone_number) 
 
)
;

create table Authentication_system  
(  
     password varchar(20),  
     login_id  int primary key  
  
)
;

CREATE TABLE Staff (   
  Staff_id INT PRIMARY KEY,   
  First_name VARCHAR(50),   
  Last_name VARCHAR(50),   
  Email VARCHAR(100),  
  Phone_no VARCHAR(20) , 
 
Login_id int, 
foreign key(Login_id) references Authentication_system(login_id) 
)
;

create table track 
( 
 
Staff_id int, 
User_id int, 
 
constraint S_U primary key (Staff_id, User_id), 
 
Foreign key(Staff_id) references Staff(Staff_id), 
Foreign key(User_id) references Readers(User_id) 
)
;

CREATE TABLE Publisher(  
  Publisher_id INT PRIMARY KEY,  
  Year_of_Publication varchar(20), 
  Name VARCHAR(100)  
)
;

CREATE TABLE Books (   
  Auth_No INT PRIMARY KEY,   
  Title VARCHAR(100),   
  ISBN VARCHAR(20),   
  Publisher_id INT,   
  Category VARCHAR(50),   
  Edition VARCHAR(50),   
  Price DECIMAL(10, 2),   
  
foreign key (Publisher_id) references Publisher(Publisher_id),  
  
 
Staff_id int, 
foreign key(Staff_id) references Staff(Staff_id) 
  
  
)
;

create table issue 
( 
issue_date date ,  
due_date date ,  
return_date date,  
 
pkb int primary key, 
foreign key(pkb) references Books(Auth_no), 
 
pkr int, 
foreign key(pkr) references Readers(User_id) 
 
)
;

CREATE TABLE Report (   
  Reg_id INT PRIMARY KEY,   
  User_id INT,   
  Book_No INT,   
  issue_date date,   
    
foreign key(User_id) references Readers(User_id),  
Staff_id int,  
Foreign key (Staff_id) references Staff(Staff_id)  
)
;

INSERT INTO Readers (User_id, First_name, Last_name, Email, Address) 
VALUES (1, 'Akshdeep', 'Singh', 'asingh@gmail.com', '34, Silver Tower, S.V. Road, Andheri West')
;

INSERT INTO Phone_number (User_id, Phone_number) 
VALUES (1, 8723123568)
;

INSERT INTO Authentication_system (password, login_id) 
VALUES ('As%90234', 1)
;

INSERT INTO Staff (Staff_id, First_name, Last_name, Email, Phone_no, Login_id) 
VALUES (1, 'Akshdeep', 'Singh', 'asingh@gmail.com', '8723123568', 1)
;

INSERT INTO track (Staff_id, User_id) 
VALUES (1, 1)
;

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name) 
VALUES (1, '2018', 'Amar Chitra Katha')
;

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id) 
VALUES (1, 'Krishna: Defender of Dharma', 'ISBN123456789', 1, 'Mythological Fiction', 'Hardcover Edition', 49.99, 1)
;

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr) 
VALUES ('29-march-2024', '05-may-2024', NULL, 1, 1)
;

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id) 
VALUES (1, 1, 1, TO_DATE('2024-03-29', 'YYYY-MM-DD'), 1);
;

INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (2, 'Rajesh', 'Patel', 'rajesh.patel@gmail.com', ' 23A, Shanti Nagar, Model Town');
	
INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (3, ' Nisha', 'Sharma', ' nisha.sharma88@gmail.com', ' C-56, Green Park, Andheri West');
	
INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (4, 'Arjun', 'Singh', ' arjun.singh85@rediffmail.com', ' 7/12, Patel Colony, Bandra East');
	
INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (5, 'Aditya', 'Verma', ' adityaverma94@yahoo.com', ' Flat No. 302, Rose Apartment, Juhu Tara Road');
	
INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (6, 'Ishika', 'Das', ' ishika.das89@gmail.com', ' B-18, Paradise Society, Goregaon West');
	
INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (7, 'Yash', 'Kapoor', ' yash.kapoor91@yahoo.com', ' D-9, Raj Palace, Malad East');
	
INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (8, 'Aisha', 'Khan', ' aishakhan96@gmail.com', ' 14B, Sai Darshan, Kandivali West');

INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (9, 'Kabir', 'Singh', ' kabirs21@rediffmail.com', ' G-27, Golden Tower, Santacruz East');

INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (10, 'Ananya', 'Reddy', ' ananya.reddy93@yahoo.com', ' 102, Lake View Residency, Powai');

INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
VALUES (11, 'Aarav', 'Gupta', ' aaravgupta92@gmail.com', ' H-4, Orchid Plaza, Versova');



INSERT INTO Phone_number (User_id, Phone_number)
VALUES (2, 8754239840);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (3, 9854586852);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (4, 7005485689);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (5, 7852356521);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (6, 8527456951);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (6, 6231589702);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (7, 9636541230);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (8, 8526547539);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (9, 7564898520);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (9, 9014589632);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (10, 7054236598);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (11, 8462159730);

INSERT INTO Phone_number (User_id, Phone_number)
VALUES (11, 7852345611);




INSERT INTO Authentication_system (password, login_id)
VALUES ('Rp#67890', 2);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Ns$78901', 3);

INSERT INTO Authentication_system (password, login_id)
VALUES ('As*23456', 4);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Av^12345', 5);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Id@67890', 6);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Yk#23456', 7);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Ak*78901', 8);

INSERT INTO Authentication_system (password, login_id)
VALUES (' Ks$12345', 9);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Ar^67890', 10);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Aa@12345', 11);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Ss@12025', 12);

INSERT INTO Authentication_system (password, login_id)
VALUES ('Gj@10105', 13);

INSERT INTO Authentication_system (password, login_id)
VALUES ('As@02345', 14);




INSERT INTO Staff (Staff_id, First_name, Last_name, Email, Phone_no, Login_id)
VALUES (2, 'Nisha', 'Sharma', ' nisha.sharma88@gmail.com','9854586852',3);

INSERT INTO Staff (Staff_id, First_name, Last_name, Email, Phone_no, Login_id)
VALUES (3,'Aisha','Khan', ' aishakhan96@gmail.com','8526547539',8);

INSERT INTO Staff (Staff_id, First_name, Last_name, Email, Phone_no, Login_id)
VALUES (4, 'Shivang', 'Singh', 'ssingh17@thapar.edu', '8485849732', 12);

INSERT INTO Staff (Staff_id, First_name, Last_name, Email, Phone_no, Login_id)
VALUES (5, 'Gourav', 'Jena', 'gjena@thapar.edu', '7569841523', 13);

INSERT INTO Staff (Staff_id, First_name, Last_name, Email, Phone_no, Login_id)
VALUES (6, 'Achyut', 'Sidhant', 'asidhant@thapar.edu', '8201367980', 14);





INSERT INTO track (Staff_id, User_id)
VALUES (2, 2);

INSERT INTO track (Staff_id, User_id)
VALUES (2, 8);

INSERT INTO track (Staff_id, User_id)
VALUES (3, 3);

INSERT INTO track (Staff_id, User_id)
VALUES (3, 4);

INSERT INTO track (Staff_id, User_id)
VALUES (4, 5);

INSERT INTO track (Staff_id, User_id)
VALUES (4, 6);

INSERT INTO track (Staff_id, User_id)
VALUES (5, 7);

INSERT INTO track (Staff_id, User_id)
VALUES (5, 9);

INSERT INTO track (Staff_id, User_id)
VALUES (6, 10);

INSERT INTO track (Staff_id, User_id)
VALUES (6, 11);





INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (2, '2019', 'Penguin Random House');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (3, '2018', 'HarperCollins');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (4, '2020', 'Rupa Publications');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (5, '2017', 'Westland Publications');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (6, '2016', 'Hachette');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (7, '2015', 'Srishti Publishers & Distributors');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (8, '2021', 'Notion Press');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (9, '2014', 'Aleph Book Company');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (10, '2013', 'Tara Books');

INSERT INTO Publisher (Publisher_id, Year_of_Publication, Name)
VALUES (11, '2012', 'Jaico Publishing House');



INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (2, 'The Testaments', 'ISBN101110001', 2, 'Dystopian Fiction', 'First Edition', 119.99, 2);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (3, 'Normal People', 'ISBN110110002', 2, 'Literary Fiction', 'Hardcover Edition', 329.99, 3);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (4, 'City of Girls', 'ISBN111010003', 2, 'Historical Fiction', 'Paperback Edition', 159.99, 4);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (5, 'Less', 'ISBN202220001', 3, 'Satirical Fiction', 'Reprint Edition', 499.99, 5);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (6, 'The Ministry of Utmost Happiness', 'ISBN220220002', 3, 'Contemporary Fiction', 'Special Edition', 599.99, 6);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (7, 'The Outsider', 'ISBN222020003', 3, 'Crime Fiction', ' Collectors Edition', 249.99, 2);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (8, 'The 3 Mistakes of My Life', 'ISBN303330001', 4, 'Contemporary Fiction', 'Revised Edition', 349.99, 3);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (9, 'The Greatest Secret', 'ISBN330330002', 4, ' Self-Help', 'Deluxe Edition', 449.99, 4);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (10, 'India Positive', 'ISBN333030003', 4, ' Non-Fiction', 'Limited Edition', 199.99, 5);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (11, 'The Immortals of Meluha', 'ISBN404440001', 5, ' Mythological Fiction', 'Anniversary Edition', 299.99, 6);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (12, ' The Krishna Key', 'ISBN440440002', 5, 'Thriller', 'Illustrated Edition', 299.99, 2);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (13, ' I Do What I Do', 'ISBN444040003', 5, 'Economics', ' Special Collectors Edition', 129.99, 3);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (14, ' The Fault in Our Stars', 'ISBN505550001', 6, ' Young Adult Fiction', ' Movie Tie-In Edition', 529.99, 4);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (15, ' To Kill a Mockingbird', 'ISBN550550002', 6, ' Classic Fiction', ' 50th Anniversary Edition', 239.99, 5);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (16, ' The Night Circus', 'ISBN555050003', 6, 'Fantasy', ' Exclusive Limited Edition', 169.99, 6);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (17, ' Life is What You Make it', 'ISBN606660001', 7, 'Romance', ' 20th Anniversary Edition', 799.99, 2);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (18, ' Will You Still Love Me?', 'ISBN660660002', 7, 'Romance', ' Signature Edition', 159.99, 3);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (19, ' The One You Cannot Have', 'ISBN666060003', 7, 'Romance', ' Platinum Edition', 229.99, 4);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (20, ' The Monk Who Sold His Ferrari', 'ISBN707770001', 8, 'Self-Help', ' Golden Anniversary Edition', 99.99, 5);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (21, ' Sita: Warrior of Mithila', 'ISBN770770002', 8, 'Mythological Fiction', ' Special Edition Box Set', 149.99, 6);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (22, ' One Indian Girl', 'ISBN777070003', 8, ' Contemporary Fiction', ' Illustrated Collectors Edition', 59.99, 2);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (23, ' The Palace of Illusions', 'ISBN808880001', 9, ' Mythological Fiction', ' 20th Anniversary Edition', 369.99, 3);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (24, ' The Inheritance of Loss', 'ISBN880880002', 9, ' Literary Fiction', ' Deluxe Collectors Edition', 189.99, 4);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (25, ' The Glass Palace', 'ISBN888080003', 9, ' Historical Fiction', ' Special Commemorative Edition', 209.99, 5);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (26, 'The Guide', 'ISBN909990001', 10, ' Literary Fiction', ' Diamond Jubilee Edition', 149.99, 6);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (27, ' The White Tiger', 'ISBN990990002', 10, ' Contemporary Fiction', ' 10th Anniversary Edition', 49.99, 2);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (28, ' A Suitable Boy', 'ISBN999090003', 10, ' Historical Fiction', ' Limited Signed Edition', 99.99, 3);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (29, ' The Alchemist', 'ISBN100100001', 11, 'Fable', ' 25th Anniversary Edition', 449.99, 4);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (30, ' 2 States', 'ISBN101000002', 11, 'Romance', ' Collectors Edition', 109.99, 5);

INSERT INTO Books (Auth_No, Title, ISBN, Publisher_id, Category, Edition, Price, Staff_id)
VALUES (31, ' Life of Pi', 'ISBN101100003', 11, 'Adventure', ' Film Tie-In Edition', 229.99, 6);



INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-01', 'YYYY-MM-DD'), TO_DATE('2024-06-01', 'YYYY-MM-DD'), NULL, 2, 3);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-01', 'YYYY-MM-DD'), TO_DATE('2024-06-01', 'YYYY-MM-DD'), NULL, 4, 4);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-01', 'YYYY-MM-DD'), TO_DATE('2024-05-08', 'YYYY-MM-DD'), NULL, 7, 4);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-02', 'YYYY-MM-DD'), TO_DATE('2024-06-02', 'YYYY-MM-DD'), NULL, 8, 5);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-02', 'YYYY-MM-DD'), TO_DATE('2024-05-09', 'YYYY-MM-DD'), NULL, 10, 6);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-02', 'YYYY-MM-DD'), TO_DATE('2024-06-02', 'YYYY-MM-DD'), NULL, 13, 6);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-03', 'YYYY-MM-DD'), TO_DATE('2024-06-03', 'YYYY-MM-DD'), NULL, 15, 7);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-03', 'YYYY-MM-DD'), TO_DATE('2024-06-03', 'YYYY-MM-DD'), NULL, 16, 8);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-03', 'YYYY-MM-DD'), TO_DATE('2024-05-17', 'YYYY-MM-DD'), NULL, 20, 9);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-04', 'YYYY-MM-DD'), TO_DATE('2024-06-04', 'YYYY-MM-DD'), NULL, 27, 11);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-04', 'YYYY-MM-DD'), TO_DATE('2024-06-04', 'YYYY-MM-DD'), NULL, 28, 11);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-05', 'YYYY-MM-DD'), TO_DATE('2024-06-05', 'YYYY-MM-DD'), NULL, 30, 10);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-05', 'YYYY-MM-DD'), TO_DATE('2024-05-21', 'YYYY-MM-DD'), NULL, 31, 10);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-05', 'YYYY-MM-DD'), TO_DATE('2024-06-05', 'YYYY-MM-DD'), NULL, 24, 2);

INSERT INTO issue (issue_date, due_date, return_date, pkb, pkr)
VALUES (TO_DATE('2024-05-05', 'YYYY-MM-DD'), TO_DATE('2024-06-05', 'YYYY-MM-DD'), NULL, 22, 2);




INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (2, 3, 2, TO_DATE('2024-05-01', 'YYYY-MM-DD'), 2);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (3, 4, 4, TO_DATE('2024-05-01', 'YYYY-MM-DD'), 4);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (4, 4, 7, TO_DATE('2024-05-01', 'YYYY-MM-DD'), 2);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (5, 5, 8, TO_DATE('2024-05-02', 'YYYY-MM-DD'), 3);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (6, 6, 10, TO_DATE('2024-05-02', 'YYYY-MM-DD'), 5);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (7, 6, 13, TO_DATE('2024-05-02', 'YYYY-MM-DD'), 3);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (8, 7, 15, TO_DATE('2024-05-03', 'YYYY-MM-DD'), 5);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (9, 8, 16, TO_DATE('2024-05-03', 'YYYY-MM-DD'), 6);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (10, 9, 20, TO_DATE('2024-05-03', 'YYYY-MM-DD'), 5);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (11, 11, 27, TO_DATE('2024-05-04', 'YYYY-MM-DD'), 2);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (12, 11, 28, TO_DATE('2024-05-04', 'YYYY-MM-DD'), 3);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (13, 10, 30, TO_DATE('2024-05-05', 'YYYY-MM-DD'), 5);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (14, 10, 31, TO_DATE('2024-05-05', 'YYYY-MM-DD'), 6);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (15, 2, 24, TO_DATE('2024-05-05', 'YYYY-MM-DD'), 4);

INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
VALUES (16, 2, 22, TO_DATE('2024-05-05', 'YYYY-MM-DD'), 2);




select * from Readers;
select * from Phone_number;
select * from Authentication_System;
select * from Staff;
select * from Track;
select * from Publisher;
select * from Books;
select * from Issue;
select * from  Report;



SELECT distinct R.First_name, R.Last_name, R.Email
FROM Readers R
JOIN issue I ON R.User_id = I.pkr;



SELECT R.User_id, R.First_name, R.Last_name, COUNT(I.pkb) AS Num_of_Books_Issued
FROM Readers R
LEFT JOIN issue I ON R.User_id = I.pkr
GROUP BY R.User_id, R.First_name, R.Last_name;




SELECT B.Title, I.issue_date, I.due_date, I.return_date
FROM issue I
JOIN Books B ON I.pkb = B.Auth_No;




SELECT
COUNT(*) AS Total_Books_Issued,
SUM(CASE WHEN return_date IS NOT NULL THEN 1 ELSE 0 END) AS Total_Books_Returned
FROM issue;




SELECT B.Title, I.due_date
FROM issue I
JOIN Books B ON I.pkb = B.Auth_No
WHERE I.pkr = 4;




SELECT distinct R.First_name, R.Last_name
FROM Readers R
JOIN issue I ON R.User_id = I.pkr
WHERE I.return_date IS NULL;



SELECT R.First_name, R.Last_name, B.Title
FROM Readers R
JOIN issue I ON R.User_id = I.pkr
JOIN Books B ON I.pkb = B.Auth_No;




SELECT S.First_name, S.Last_name, COUNT(I.pkb) AS Num_of_Books_Issued
FROM Staff S
JOIN track T ON S.Staff_id = T.Staff_id
JOIN issue I ON T.User_id = I.pkr
GROUP BY S.Staff_id, S.First_name, S.Last_name;




SELECT B.Category, COUNT(I.pkb) AS Num_of_Books_Issued
FROM Books B
LEFT JOIN issue I ON B.Auth_No = I.pkb
GROUP BY B.Category;




SELECT R.First_name, R.Last_name
FROM Readers R
JOIN issue I ON R.User_id = I.pkr
JOIN Books B ON I.pkb = B.Auth_No
JOIN Publisher P ON B.Publisher_id = P.Publisher_id
WHERE P.Name = 'HarperCollins';




SELECT B.Title
FROM Readers R
JOIN issue I ON R.User_id = I.pkr
JOIN Books B ON I.pkb = B.Auth_No
WHERE R.Last_name LIKE 'S%';




SELECT P.Name, AVG(B.Price) AS Average_Price
FROM Books B
JOIN Publisher P ON B.Publisher_id = P.Publisher_id
GROUP BY P.Publisher_id, P.Name;




SELECT R.First_name, R.Last_name
FROM Readers R
JOIN issue I ON R.User_id = I.pkr
GROUP BY R.User_id, R.First_name, R.Last_name
HAVING COUNT(*) > 1;




SELECT B.Title
FROM Readers R
JOIN issue I ON R.User_id = I.pkr
JOIN Books B ON I.pkb = B.Auth_No
WHERE R.Address LIKE '%Andheri West%';




SELECT Title
FROM Books B
JOIN Publisher P ON B.Publisher_id = P.Publisher_id
WHERE P.Name = 'Penguin Random House';


 -- Procedure for Inserting a New Reader:
CREATE OR REPLACE PROCEDURE insert_reader (
    p_user_id IN INT,
    p_first_name IN VARCHAR2,
    p_last_name IN VARCHAR2,
    p_email IN VARCHAR2,
    p_address IN VARCHAR2
)
IS
BEGIN
    INSERT INTO Readers (User_id, First_name, Last_name, Email, Address)
    VALUES (p_user_id, p_first_name, p_last_name, p_email, p_address);
END insert_reader;

-- Procedure for Issuing a Book:
CREATE OR REPLACE PROCEDURE issue_book (
    p_issue_date IN DATE,
    p_due_date IN DATE,
    p_pkb IN INT,
    p_pkr IN INT
)
IS
BEGIN
    INSERT INTO issue (issue_date, due_date, pkb, pkr)
    VALUES (p_issue_date, p_due_date, p_pkb, p_pkr);
END issue_book;

-- Procedure for Updating Staff Information:
CREATE OR REPLACE PROCEDURE update_staff_info (
    p_staff_id IN INT,
    p_first_name IN VARCHAR2,
    p_last_name IN VARCHAR2,
    p_email IN VARCHAR2,
    p_phone_no IN VARCHAR2,
    p_login_id IN INT
)
IS
BEGIN
    UPDATE Staff
    SET First_name = p_first_name,
        Last_name = p_last_name,
        Email = p_email,
        Phone_no = p_phone_no,
        Login_id = p_login_id
    WHERE Staff_id = p_staff_id;
END update_staff_info;

-- Procedure for Generating Report:
CREATE OR REPLACE PROCEDURE generate_report (
    p_reg_id IN INT,
    p_user_id IN INT,
    p_book_no IN INT,
    p_issue_date IN DATE,
    p_staff_id IN INT
)
IS
BEGIN
    INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
    VALUES (p_reg_id, p_user_id, p_book_no, p_issue_date, p_staff_id);
END generate_report;

-- Functions:a. Function to Get Book Title by Auth_No:
CREATE OR REPLACE FUNCTION get_book_title (
    p_auth_no IN INT
)
RETURN VARCHAR2
IS
    v_title VARCHAR2(100);
BEGIN
    SELECT Title INTO v_title
    FROM Books
    WHERE Auth_No = p_auth_no;

    RETURN v_title;
END get_book_title;

-- Function to Calculate Late Fee:
CREATE OR REPLACE FUNCTION calculate_late_fee (
    p_due_date IN DATE,
    p_return_date IN DATE
)
RETURN NUMBER
IS
    v_late_fee NUMBER;
BEGIN
    v_late_fee := CASE
                      WHEN p_return_date > p_due_date THEN 
                          (p_return_date - p_due_date) * 0.1  -- Example calculation for late fee
                      ELSE 
                          0
                  END;
    RETURN v_late_fee;
END calculate_late_fee;

-- Trigger for Tracking Book Issuance:
CREATE OR REPLACE TRIGGER book_issuance_trigger
AFTER INSERT ON issue
FOR EACH ROW
BEGIN
    INSERT INTO Report (Reg_id, User_id, Book_No, issue_date, Staff_id)
    VALUES (:NEW.pkb, :NEW.pkr, :NEW.pkb, :NEW.issue_date, (SELECT Staff_id FROM track WHERE User_id = :NEW.pkr));
END;

-- Trigger for Tracking Book Returns:
CREATE OR REPLACE TRIGGER book_return_trigger
BEFORE UPDATE OF return_date ON issue
FOR EACH ROW
BEGIN
    IF :NEW.return_date IS NOT NULL THEN
        :NEW.return_date := SYSDATE;
    END IF;
END;


-- Cursor to Fetch Book Issuance Details:
-- This cursor fetches information about books that have been issued.
CREATE OR REPLACE PROCEDURE fetch_issued_books_cursor
IS
    CURSOR issued_books_cursor IS
        SELECT i.issue_date, i.due_date, i.return_date, b.Auth_No, b.Title, r.User_id, r.First_name, r.Last_name
        FROM issue i
        INNER JOIN Books b ON i.pkb = b.Auth_No
        INNER JOIN Readers r ON i.pkr = r.User_id;
BEGIN
    FOR issued_book IN issued_books_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Issue Date: ' || issued_book.issue_date || ', Due Date: ' || issued_book.due_date || ', Return Date: ' || issued_book.return_date || ', Auth_No: ' || issued_book.Auth_No || ', Title: ' || issued_book.Title || ', User ID: ' || issued_book.User_id || ', First Name: ' || issued_book.First_name || ', Last Name: ' || issued_book.Last_name);
    END LOOP;
END fetch_issued_books_cursor;


-- Cursor to Fetch Staff Details:
-- This cursor fetches information about staff members.
CREATE OR REPLACE PROCEDURE fetch_staff_details_cursor
IS
    CURSOR staff_cursor IS
        SELECT Staff_id, First_name, Last_name, Email, Phone_no
        FROM Staff;
BEGIN
    FOR staff_rec IN staff_cursor LOOP
        DBMS_OUTPUT.PUT_LINE('Staff ID: ' || staff_rec.Staff_id || ', First Name: ' || staff_rec.First_name || ', Last Name: ' || staff_rec.Last_name || ', Email: ' || staff_rec.Email || ', Phone Number: ' || staff_rec.Phone_no);
    END LOOP;
END fetch_staff_details_cursor;

-- pl output
BEGIN
    insert_reader(100, 'John', 'Doe', 'john@example.com', '123 Main Street');
END;

BEGIN
    issue_book(SYSDATE, SYSDATE + 7, 23, 1);
END;

BEGIN
    update_staff_info(188, 'Jane', 'Smith', 'jane@example.com', '555-1234', 123);
END;


BEGIN
    generate_report(10, 1, 24, SYSDATE, 1);
END;

DECLARE
    book_title VARCHAR2(100);
BEGIN
    book_title := get_book_title(10);
    DBMS_OUTPUT.PUT_LINE('Book Title: ' || book_title);
END;

DECLARE
    late_fee NUMBER;
BEGIN
    late_fee := calculate_late_fee(SYSDATE, SYSDATE + 5);
    DBMS_OUTPUT.PUT_LINE('Late Fee: ' || late_fee);
END;


BEGIN
    fetch_issued_books_cursor;
END;


BEGIN
    fetch_staff_details_cursor;
END;
